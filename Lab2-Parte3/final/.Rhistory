group_by(matricula) %>%
mutate(cra.contrib = media*creditos) %>%
summarise(cra = sum(cra.contrib)/sum(creditos))
head(graduados.cra)
library(caret)
library(reshape2)
graduados.model.input <- graduados.clean %>%
group_by(matricula,disciplina)  %>%
filter(media == max(media)) %>%
ungroup() %>%
select(matricula,disciplina,media) %>%
mutate(disciplina = as.factor(gsub(" ",".",disciplina))) %>%
dcast(matricula ~ disciplina, mean) %>%
merge(graduados.cra)
disciplinas <- data.frame(calc1 = graduados.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = graduados.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = graduados.model.input$Leitura.e.Produção.de.Textos,
p1 = graduados.model.input$Programação.I,
ic = graduados.model.input$Introdução.à.Computação,
lp1 = graduados.model.input$Laboratório.de.Programação.I,
calc2 = graduados.model.input$Cálculo.Diferencial.e.Integral.II,
md = graduados.model.input$Matemática.Discreta,
p2 = graduados.model.input$Programação.II,
classica = graduados.model.input$Fundamentos.de.Física.Clássica,
lp2 = graduados.model.input$Laboratório.de.Programação.II,
grafos = graduados.model.input$Teoria.dos.Grafos,
cra = graduados.model.input$cra)
disciplinas <- na.omit(disciplinas)
split <- createDataPartition(y=disciplinas$cra, p = 0.90, list = FALSE)
train <- disciplinas[split,]
test <- disciplinas[-split,]
set.seed(113) # for reproducing these results
ridge <- train(cra ~., data = train,
method='ridge',
lambda = 4)
ridge.pred <- predict(ridge, test)
sqrt(mean(ridge.pred - test$cra)^2)
treino.reshaped <- data.frame(matricula = treino.model.input$ALU_NOVAMATRICULA,
calc1 = treino.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = treino.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = treino.model.input$Leitura.e.Produção.de.Textos,
p1 = treino.model.input$Programação.I,
ic = treino.model.input$Introdução.à.Computação,
lp1 = treino.model.input$Laboratório.de.Programação.I,
calc2 = treino.model.input$Cálculo.Diferencial.e.Integral.II,
md = treino.model.input$Matemática.Discreta,
p2 = treino.model.input$Programação.II,
grafos = treino.model.input$Teoria.dos.Grafos,
classica = treino.model.input$Fundamentos.de.Física.Clássica,
lp2 = treino.model.input$Laboratório.de.Programação.II,
cra = treino.model.input$cra)
summary(treino.reshaped)
treino.reshaped <- na.omit(treino.reshaped)
summary(treino.reshaped)
ridge <- train(cra ~ ., data = treino.reshaped,
method='ridge',
lambda = 4)
warnings()
treino.reshaped <- na.omit(treino.reshaped)
View(treino.reshaped)
View(treino.model.input)
treino.model.input <- na.o
treino.model.input <- na.omit(treino.model.input)
View(treino.model.input)
treino.reshaped <- data.frame(matricula = treino.model.input$ALU_NOVAMATRICULA,
calc1 = treino.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = treino.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = treino.model.input$Leitura.e.Produção.de.Textos,
p1 = treino.model.input$Programação.I,
ic = treino.model.input$Introdução.à.Computação,
lp1 = treino.model.input$Laboratório.de.Programação.I,
calc2 = treino.model.input$Cálculo.Diferencial.e.Integral.II,
md = treino.model.input$Matemática.Discreta,
p2 = treino.model.input$Programação.II,
grafos = treino.model.input$Teoria.dos.Grafos,
classica = treino.model.input$Fundamentos.de.Física.Clássica,
lp2 = treino.model.input$Laboratório.de.Programação.II,
cra = treino.model.input$cra)
disciplinas.treino <- data.frame(calc1 = treino.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = treino.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = treino.model.input$Leitura.e.Produção.de.Textos,
p1 = treino.model.input$Programação.I,
ic = treino.model.input$Introdução.à.Computação,
lp1 = treino.model.input$Laboratório.de.Programação.I,
calc2 = treino.model.input$Cálculo.Diferencial.e.Integral.II,
md = treino.model.input$Matemática.Discreta,
p2 = treino.model.input$Programação.II,
classica = treino.model.input$Fundamentos.de.Física.Clássica,
lp2 = treino.model.input$Laboratório.de.Programação.II,
grafos = treino.model.input$Teoria.dos.Grafos,
cra = treino.model.input$cra)
set.seed(113) # for reproducing these results
ridge <- train(cra ~ ., data = disciplinas.treino,
method='ridge',
lambda = 4)
disciplinas.teste <- data.frame(calc1 = teste.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = teste.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = teste.model.input$Leitura.e.Produção.de.Textos,
p1 = teste.model.input$Programação.I,
ic = teste.model.input$Introdução.à.Computação,
lp1 = teste.model.input$Laboratório.de.Programação.I,
calc2 = teste.model.input$Cálculo.Diferencial.e.Integral.II,
md = teste.model.input$Matemática.Discreta,
p2 = teste.model.input$Programação.II,
classica = teste.model.input$Fundamentos.de.Física.Clássica,
lp2 = teste.model.input$Laboratório.de.Programação.II,
grafos = teste.model.input$Teoria.dos.Grafos,
cra = teste.model.input$cra)
ridge.pred <- predict(ridge, teste.model.input)
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - test$cra)^2)
disciplinas.teste <- data.frame(calc1 = teste.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = teste.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = teste.model.input$Leitura.e.Produção.de.Textos,
p1 = teste.model.input$Programação.I,
ic = teste.model.input$Introdução.à.Computação,
lp1 = teste.model.input$Laboratório.de.Programação.I,
calc2 = teste.model.input$Cálculo.Diferencial.e.Integral.II,
md = teste.model.input$Matemática.Discreta,
p2 = teste.model.input$Programação.II,
classica = teste.model.input$Fundamentos.de.Física.Clássica,
lp2 = teste.model.input$Laboratório.de.Programação.II,
grafos = teste.model.input$Teoria.dos.Grafos)
set.seed(113) # for reproducing these results
ridge <- train(cra ~ ., data = disciplinas.treino,
method='ridge',
lambda = 4)
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - test$cra)^2)
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
disciplinas.teste <- data.frame(calc1 = teste.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = teste.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = teste.model.input$Leitura.e.Produção.de.Textos,
p1 = teste.model.input$Programação.I,
ic = teste.model.input$Introdução.à.Computação,
lp1 = teste.model.input$Laboratório.de.Programação.I,
calc2 = teste.model.input$Cálculo.Diferencial.e.Integral.II,
md = teste.model.input$Matemática.Discreta,
p2 = teste.model.input$Programação.II,
classica = teste.model.input$Fundamentos.de.Física.Clássica,
lp2 = teste.model.input$Laboratório.de.Programação.II,
grafos = teste.model.input$Teoria.dos.Grafos,
cra = teste.model.input$cra)
set.seed(113) # for reproducing these results
ridge <- train(cra ~ ., data = disciplinas.treino,
method='ridge',
lambda = 4)
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
set.seed(113) # for reproducing these results
ridge <- train(cra ~ ., data = disciplinas.treino,
method='ridge',
lambda = 4)
ridge.pred <- predict(ridge, disciplinas.teste)
ridge.pred
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
disciplinas.treino <- na.omit(disciplinas.treino)
disciplinas.teste <- na.omit(disciplinas.teste)
set.seed(113) # for reproducing these results
ridge <- train(cra ~ ., data = disciplinas.treino,
method='ridge',
lambda = 4)
ridge.pred <- predict(ridge, disciplinas.teste)
ridge.pred
disciplinas.teste <- na.omit(disciplinas.teste)
ridge <- train(cra ~ ., data = disciplinas.treino,
method='ridge',
lambda = 4)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(Salary~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
disciplinas.treino <- data.frame(calc1 = treino.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = treino.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = treino.model.input$Leitura.e.Produção.de.Textos,
p1 = treino.model.input$Programação.I,
ic = treino.model.input$Introdução.à.Computação,
lp1 = treino.model.input$Laboratório.de.Programação.I,
calc2 = treino.model.input$Cálculo.Diferencial.e.Integral.II,
md = treino.model.input$Matemática.Discreta,
p2 = treino.model.input$Programação.II,
classica = treino.model.input$Fundamentos.de.Física.Clássica,
lp2 = treino.model.input$Laboratório.de.Programação.II,
grafos = treino.model.input$Teoria.dos.Grafos,
cra = treino.model.input$cra)
disciplinas.teste <- data.frame(calc1 = teste.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = teste.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = teste.model.input$Leitura.e.Produção.de.Textos,
p1 = teste.model.input$Programação.I,
ic = teste.model.input$Introdução.à.Computação,
lp1 = teste.model.input$Laboratório.de.Programação.I,
calc2 = teste.model.input$Cálculo.Diferencial.e.Integral.II,
md = teste.model.input$Matemática.Discreta,
p2 = teste.model.input$Programação.II,
classica = teste.model.input$Fundamentos.de.Física.Clássica,
lp2 = teste.model.input$Laboratório.de.Programação.II,
grafos = teste.model.input$Teoria.dos.Grafos,
cra = teste.model.input$cra)
disciplinas.treino <- na.omit(disciplinas.treino)
disciplinas.teste <- na.omit(disciplinas.teste)
set.seed(113) # for reproducing these results
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(cra~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
ridge
predict(ridge$finalModel, type='coef', mode='norm')$coefficients[12,]
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$Salary)^2)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
disciplinas.treino <- na.omit(disciplinas.treino)
disciplinas.teste <- na.omit(disciplinas.teste)
set.seed(825) # for reproducing these results
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(cra~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
ridge
predict(ridge$finalModel, type='coef', mode='norm')$coefficients[12,]
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(cra~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
ridge
predict(ridge$finalModel, type='coef', mode='norm')$coefficients[12,]
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
disciplinas.treino <- na.omit(disciplinas.treino)
disciplinas.teste <- na.omit(disciplinas.teste)
disciplinas.treino <- data.frame(calc1 = treino.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = treino.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = treino.model.input$Leitura.e.Produção.de.Textos,
p1 = treino.model.input$Programação.I,
ic = treino.model.input$Introdução.à.Computação,
lp1 = treino.model.input$Laboratório.de.Programação.I,
calc2 = treino.model.input$Cálculo.Diferencial.e.Integral.II,
md = treino.model.input$Matemática.Discreta,
p2 = treino.model.input$Programação.II,
classica = treino.model.input$Fundamentos.de.Física.Clássica,
lp2 = treino.model.input$Laboratório.de.Programação.II,
grafos = treino.model.input$Teoria.dos.Grafos,
cra = treino.model.input$cra)
disciplinas.teste <- data.frame(calc1 = teste.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = teste.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = teste.model.input$Leitura.e.Produção.de.Textos,
p1 = teste.model.input$Programação.I,
ic = teste.model.input$Introdução.à.Computação,
lp1 = teste.model.input$Laboratório.de.Programação.I,
calc2 = teste.model.input$Cálculo.Diferencial.e.Integral.II,
md = teste.model.input$Matemática.Discreta,
p2 = teste.model.input$Programação.II,
classica = teste.model.input$Fundamentos.de.Física.Clássica,
lp2 = teste.model.input$Laboratório.de.Programação.II,
grafos = teste.model.input$Teoria.dos.Grafos,
cra = teste.model.input$cra)
set.seed(825) # for reproducing these results
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(cra~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
ridge
predict(ridge$finalModel, type='coef', mode='norm')$coefficients[12,]
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
disciplinas.treino <- data.frame(calc1 = treino.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = treino.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = treino.model.input$Leitura.e.Produção.de.Textos,
p1 = treino.model.input$Programação.I,
ic = treino.model.input$Introdução.à.Computação,
lp1 = treino.model.input$Laboratório.de.Programação.I,
calc2 = treino.model.input$Cálculo.Diferencial.e.Integral.II,
md = treino.model.input$Matemática.Discreta,
p2 = treino.model.input$Programação.II,
classica = treino.model.input$Fundamentos.de.Física.Clássica,
lp2 = treino.model.input$Laboratório.de.Programação.II,
grafos = treino.model.input$Teoria.dos.Grafos,
cra = treino.model.input$cra)
disciplinas.teste <- data.frame(calc1 = teste.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = teste.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = teste.model.input$Leitura.e.Produção.de.Textos,
p1 = teste.model.input$Programação.I,
ic = teste.model.input$Introdução.à.Computação,
lp1 = teste.model.input$Laboratório.de.Programação.I,
calc2 = teste.model.input$Cálculo.Diferencial.e.Integral.II,
md = teste.model.input$Matemática.Discreta,
p2 = teste.model.input$Programação.II,
classica = teste.model.input$Fundamentos.de.Física.Clássica,
lp2 = teste.model.input$Laboratório.de.Programação.II,
grafos = teste.model.input$Teoria.dos.Grafos,
cra = teste.model.input$cra)
disciplinas.treino <- na.omit(disciplinas.treino)
disciplinas.teste <- na.omit(disciplinas.teste)
set.seed(825) # for reproducing these results
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(cra~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
ridge
predict(ridge$finalModel, type='coef', mode='norm')$coefficients[12,]
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
library(readr)
library(dplyr)
library(ISLR)
library(caret)
library(readr)
library(reshape2)
treino.base <- read_csv("treino_base.csv", col_types = cols(ALU_NOVAMATRICULA = col_character())) %>%
mutate(ALU_NOVAMATRICULA = as.factor(ALU_NOVAMATRICULA))
treino.base <- treino.base %>%
arrange(ALU_NOVAMATRICULA)
treino.base.clean <- treino.base %>%
filter(!is.na(MAT_MEDIA_FINAL))
treino.base.cra <- treino.base.clean %>%
group_by(ALU_NOVAMATRICULA) %>%
mutate(cra.contrib = MAT_MEDIA_FINAL*CREDITOS) %>%
summarise(cra = sum(cra.contrib)/sum(CREDITOS))
treino.model.input <- treino.base.clean %>%
group_by(ALU_NOVAMATRICULA,DISCIPLINA)  %>%
filter(MAT_MEDIA_FINAL == max(MAT_MEDIA_FINAL)) %>%
ungroup() %>%
select(ALU_NOVAMATRICULA,DISCIPLINA,MAT_MEDIA_FINAL) %>%
mutate(DISCIPLINA = as.factor(gsub(" ",".",DISCIPLINA))) %>%
dcast(ALU_NOVAMATRICULA ~ DISCIPLINA, mean) %>%
merge(treino.base.cra)
teste.base <- read_csv("teste_base.csv", col_types = cols(ALU_NOVAMATRICULA = col_character())) %>%
mutate(ALU_NOVAMATRICULA = as.factor(ALU_NOVAMATRICULA))
teste.base <- teste.base %>%
arrange(ALU_NOVAMATRICULA)
teste.base.clean <- teste.base %>%
filter(!is.na(MAT_MEDIA_FINAL))
teste.base.cra <- teste.base.clean %>%
group_by(ALU_NOVAMATRICULA) %>%
mutate(cra.contrib = MAT_MEDIA_FINAL*CREDITOS) %>%
summarise(cra = sum(cra.contrib)/sum(CREDITOS))
teste.model.input <- teste.base.clean %>%
group_by(ALU_NOVAMATRICULA,DISCIPLINA)  %>%
filter(MAT_MEDIA_FINAL == max(MAT_MEDIA_FINAL)) %>%
ungroup() %>%
select(ALU_NOVAMATRICULA,DISCIPLINA,MAT_MEDIA_FINAL) %>%
mutate(DISCIPLINA = as.factor(gsub(" ",".",DISCIPLINA))) %>%
dcast(ALU_NOVAMATRICULA ~ DISCIPLINA, mean) %>%
merge(teste.base.cra)
disciplinas.treino <- data.frame(calc1 = treino.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = treino.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = treino.model.input$Leitura.e.Produção.de.Textos,
p1 = treino.model.input$Programação.I,
ic = treino.model.input$Introdução.à.Computação,
lp1 = treino.model.input$Laboratório.de.Programação.I,
calc2 = treino.model.input$Cálculo.Diferencial.e.Integral.II,
md = treino.model.input$Matemática.Discreta,
p2 = treino.model.input$Programação.II,
classica = treino.model.input$Fundamentos.de.Física.Clássica,
lp2 = treino.model.input$Laboratório.de.Programação.II,
grafos = treino.model.input$Teoria.dos.Grafos,
cra = treino.model.input$cra)
disciplinas.teste <- data.frame(calc1 = teste.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = teste.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = teste.model.input$Leitura.e.Produção.de.Textos,
p1 = teste.model.input$Programação.I,
ic = teste.model.input$Introdução.à.Computação,
lp1 = teste.model.input$Laboratório.de.Programação.I,
calc2 = teste.model.input$Cálculo.Diferencial.e.Integral.II,
md = teste.model.input$Matemática.Discreta,
p2 = teste.model.input$Programação.II,
classica = teste.model.input$Fundamentos.de.Física.Clássica,
lp2 = teste.model.input$Laboratório.de.Programação.II,
grafos = teste.model.input$Teoria.dos.Grafos,
cra = teste.model.input$cra)
disciplinas.treino <- na.omit(disciplinas.treino)
disciplinas.teste <- na.omit(disciplinas.teste)
set.seed(825) # for reproducing these results
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(cra~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
ridge
predict(ridge$finalModel, type='coef', mode='norm')$coefficients[12,]
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
set.seed(113) # for reproducing these results
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(cra~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
ridge
predict(ridge$finalModel, type='coef', mode='norm')$coefficients[12,]
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
treino.base <- read_csv("treino_base.csv", col_types = cols(ALU_NOVAMATRICULA = col_character())) %>%
mutate(ALU_NOVAMATRICULA = as.factor(ALU_NOVAMATRICULA))
treino.base <- treino.base %>%
arrange(ALU_NOVAMATRICULA)
treino.base.clean <- treino.base %>%
filter(!is.na(MAT_MEDIA_FINAL))
treino.base.cra <- treino.base.clean %>%
group_by(ALU_NOVAMATRICULA) %>%
mutate(cra.contrib = MAT_MEDIA_FINAL*CREDITOS) %>%
summarise(cra = sum(cra.contrib)/sum(CREDITOS))
treino.model.input <- treino.base.clean %>%
group_by(ALU_NOVAMATRICULA,DISCIPLINA)  %>%
filter(MAT_MEDIA_FINAL == max(MAT_MEDIA_FINAL)) %>%
ungroup() %>%
select(ALU_NOVAMATRICULA,DISCIPLINA,MAT_MEDIA_FINAL) %>%
mutate(DISCIPLINA = as.factor(gsub(" ",".",DISCIPLINA))) %>%
dcast(ALU_NOVAMATRICULA ~ DISCIPLINA, mean) %>%
merge(treino.base.cra)
teste.base <- read_csv("teste_base.csv", col_types = cols(ALU_NOVAMATRICULA = col_character())) %>%
mutate(ALU_NOVAMATRICULA = as.factor(ALU_NOVAMATRICULA))
teste.base <- teste.base %>%
arrange(ALU_NOVAMATRICULA)
teste.base.clean <- teste.base %>%
filter(!is.na(MAT_MEDIA_FINAL))
teste.base.cra <- teste.base.clean %>%
group_by(ALU_NOVAMATRICULA) %>%
mutate(cra.contrib = MAT_MEDIA_FINAL*CREDITOS) %>%
summarise(cra = sum(cra.contrib)/sum(CREDITOS))
teste.model.input <- teste.base.clean %>%
group_by(ALU_NOVAMATRICULA,DISCIPLINA)  %>%
filter(MAT_MEDIA_FINAL == max(MAT_MEDIA_FINAL)) %>%
ungroup() %>%
select(ALU_NOVAMATRICULA,DISCIPLINA,MAT_MEDIA_FINAL) %>%
mutate(DISCIPLINA = as.factor(gsub(" ",".",DISCIPLINA))) %>%
dcast(ALU_NOVAMATRICULA ~ DISCIPLINA, mean) %>%
merge(teste.base.cra)
disciplinas.treino <- data.frame(calc1 = treino.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = treino.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = treino.model.input$Leitura.e.Produção.de.Textos,
p1 = treino.model.input$Programação.I,
ic = treino.model.input$Introdução.à.Computação,
lp1 = treino.model.input$Laboratório.de.Programação.I,
calc2 = treino.model.input$Cálculo.Diferencial.e.Integral.II,
md = treino.model.input$Matemática.Discreta,
p2 = treino.model.input$Programação.II,
classica = treino.model.input$Fundamentos.de.Física.Clássica,
lp2 = treino.model.input$Laboratório.de.Programação.II,
grafos = treino.model.input$Teoria.dos.Grafos,
cra = treino.model.input$cra)
disciplinas.teste <- data.frame(calc1 = teste.model.input$Cálculo.Diferencial.e.Integral.I,
vetorial = teste.model.input$Álgebra.Vetorial.e.Geometria.Analítica,
lpt = teste.model.input$Leitura.e.Produção.de.Textos,
p1 = teste.model.input$Programação.I,
ic = teste.model.input$Introdução.à.Computação,
lp1 = teste.model.input$Laboratório.de.Programação.I,
calc2 = teste.model.input$Cálculo.Diferencial.e.Integral.II,
md = teste.model.input$Matemática.Discreta,
p2 = teste.model.input$Programação.II,
classica = teste.model.input$Fundamentos.de.Física.Clássica,
lp2 = teste.model.input$Laboratório.de.Programação.II,
grafos = teste.model.input$Teoria.dos.Grafos,
cra = teste.model.input$cra)
disciplinas.treino <- na.omit(disciplinas.treino)
disciplinas.teste <- na.omit(disciplinas.teste)
set.seed(825) # for reproducing these results
fitControl <- trainControl(method = "cv",
number = 10)
lambdaGrid <- expand.grid(lambda = 10^seq(10, -2, length=100))
ridge <- train(cra~., data = disciplinas.treino,
method='ridge',
trControl = fitControl,
tuneGrid = lambdaGrid,
preProcess=c('center', 'scale')
)
ridge
predict(ridge$finalModel, type='coef', mode='norm')$coefficients[12,]
ridge.pred <- predict(ridge, disciplinas.teste)
sqrt(mean(ridge.pred - disciplinas.teste$cra)^2)
ridge.pred
