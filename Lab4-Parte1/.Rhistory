install.packages("readr")
library(readr)
installed.packages("readr")
library(readr)
install.packages("readr")
library(readr)
library('readr')
library(readr)
statistics <- read_csv("~/Documents/Blackjack/evosuite-report/statistics.csv")
View(statistics)
setwd("~/Documents/AD2/Lab4-Parte1")
library(readr)
library(dplyr)
lab4_part1_data <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data.csv")
lab4_part1_data_v2 <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data_v2.csv")
View(lab4_part1_data)
View(lab4_part1_data_v2)
length(unique(lab4_part1_data))
length(unique(lab4_part1_data_v2))
View(lab4_part1_data)
length(unique(lab4_part1_data$MAT_NOVA_MATRICULA))
length(unique(lab4_part1_data_v2$MAT_NOVA_MATRICULA))
View(lab4_part1_data)
View(lab4_part1_data_v2)
scheme <- evaluationScheme(lab4_part1_data, method = "split", train = .9)
library(recommenderlab)
library(reshape2)
library(ggplot2)
scheme <- evaluationScheme(lab4_part1_data, method = "split", train = .9)
dt = sort(sample(nrow(lab4_part1_data), nrow(lab4_part1_data)*.7))
train<-data[dt,]
train<-lab4_part1_data[dt,]
test<-lab4_part1_data[-dt,]
R<-as.matrix(train[,-c(1)])
r <- as(R[,-c(1)], "realRatingMatrix")
r
rec=Recommender(r[1:nrow(r)],method="UBCF", param=list(normalize = "Z-score",method="Cosine",nn=5))
print(rec)
names(getModel(rec))
getModel(rec)$nn
R <-as.matrix(test[,-c(1)])
r <- as(R[,-c(1)], "realRatingMatrix")
recom.test <- predict(rec, r[1:nrow(r)], type="ratings")
recom.test
View(as(recom.test, "matrix"))
lab4_part1_data <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data.csv")
lab4_part1_data_v2 <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data_v2.csv")
dt = sort(sample(nrow(lab4_part1_data), nrow(lab4_part1_data)*.7))
train<-lab4_part1_data[dt,]
test<-lab4_part1_data[-dt,]
R<-as.matrix(train[,-c(2)])
r <- as(R[,-c(2)], "realRatingMatrix")
r
View(R)
R<-as.matrix(train[,-c(1)])
View(R)
R<-as.matrix(train[,-c(2)])
View(R)
R<-as.matrix(subset(train, select = -train$MAT_NOVA_MATRICULA) )
R<-as.matrix(subset(train, select = -MAT_NOVA_MATRICULA) )
R<-as.matrix(subset(train, select = (-MAT_NOVA_MATRICULA)) )
R<-as.matrix(subset(train, select = (-MAT_NOVA_MATRICULA && -ALU_ANO_INGRESSO)) )
View(R)
R<-as.matrix(subset(train, select = -MAT_NOVA_MATRICULA ) )
R<-as.matrix( train[, colnames(train) != 'MAT_NOVA_MATRICULA']  )
R<-as.matrix( train[, colnames(train) != 'MAT_NOVA_MATRICULA' &&  colnames(train) != 'ALU_ANO_INGRESSO']   )
View(R)
R<-as.matrix( train[, colnames(train) != 'MAT_NOVA_MATRICULA' ]   )
View(R)
R<-as.matrix( train[, colnames(train) != 'MAT_NOVA_MATRICULA' && colnames(train) != 'MAT_NOVA_MATRICULA']   )
R<-as.matrix( train[, (colnames(train) != 'MAT_NOVA_MATRICULA') && (colnames(train) != 'MAT_NOVA_MATRICULA')]   )
R<-as.matrix( train[, (colnames(train) != c('ALU_ANO_INGRESSO')) ]   )
View(R)
R<-as.matrix( train[, (colnames(train) != c('MAT_NOVA_MATRICULA', 'ALU_ANO_INGRESSO')) ]   )
R<-as.matrix( train[, (colnames(train) %in% c('MAT_NOVA_MATRICULA', 'ALU_ANO_INGRESSO')) ]   )
lab4_part1_data <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data.csv")
lab4_part1_data_v2 <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data_v2.csv")
View(lab4_part1_data)
R<-as.matrix( train[which(!(train%in%aux)) ]  )
aux <- c('MAT_NOVA_MATRICULA', 'ALU_ANO_INGRESSO')
R<-as.matrix( train[which(!(train%in%aux)) ]  )
View(R)
R<-as.matrix( train[which(!(colnames(train)%in%aux)) ]  )
View(R)
View(lab4_part1_data)
setwd("~/Documents/AD2/Lab4-Parte1")
library(readr)
library(dplyr)
library(recommenderlab)
library(reshape2)
library(ggplot2)
library(caret)
set.seed(107)
lab4_part1_data <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data.csv")
lab4_part1_data_v2 <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data_v2.csv")
dt = sort(sample(nrow(lab4_part1_data), nrow(lab4_part1_data)*.7))
train<-lab4_part1_data[dt,]
test<-lab4_part1_data[-dt,]
removeColumns <- c('MAT_NOVA_MATRICULA', 'ALU_ANO_INGRESSO', 'ALU_PERIODO_INGRESSO')
R<-as.matrix( train[which(!(colnames(train)%in%removeColumns))])
r <- as(R, "realRatingMatrix")
r
rec=Recommender(r[1:nrow(r)],method="UBCF", param=list(normalize = "Z-score",method="Cosine",nn=5))
R<-as.matrix( test[which(!(colnames(test)%in%removeColumns))])
r <- as(R, "realRatingMatrix")
recom.test <- predict(rec, r[1:nrow(r)], type="ratings")
recom.test
View(as(recom.test, "matrix"))
predictedValues <- as(recom.test, "matrix")
View(predictedValues)
pred.values.df <- cbind(MAT_NOVA_MATRICULA=test$MAT_NOVA_MATRICULA,as.data.frame(predictedValues))
View(pred.values.df)
pred.values.df.melt <- melt(pred.values.df,id.vars = "MAT_NOVA_MATRICULA", variable.name = "NOME_DISCIPLINA") %>%
mutate(MAT_NOVA_MATRICULA = as.character(MAT_NOVA_MATRICULA),
NOME_DISCIPLINA = as.character(NOME_DISCIPLINA))
View(pred.values.df.melt)
test.4.periodo <- test %>% filter(periodo_relativo == 4)
test.4.periodo <- lab4_part1_data_v2 %>% filter(periodo_relativo == 4)
View(test.4.periodo)
result.4.periodo <- inner_join(pred.values.df.melt,test)
View(result.4.periodo)
View(test.4.periodo)
result.4.periodo <- inner_join(pred.values.df.melt,lab4_part1_data_v2)
View(result.4.periodo)
lab4_part1_data <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data.csv")
lab4_part1_data_v2 <- read_csv("~/Documents/AD2/Lab4-Parte1/lab4_part1_data_v2.csv")
View(lab4_part1_data)
View(lab4_part1_data_v2)
dt = sort(sample(nrow(lab4_part1_data), nrow(lab4_part1_data)*.7))
train<-lab4_part1_data[dt,]
test<-lab4_part1_data[-dt,]
removeColumns <- c('MAT_NOVA_MATRICULA', 'ALU_ANO_INGRESSO', 'ALU_PERIODO_INGRESSO')
R<-as.matrix( train[which(!(colnames(train)%in%removeColumns))])
r <- as(R, "realRatingMatrix")
r
rec=Recommender(r[1:nrow(r)],method="UBCF", param=list(normalize = "Z-score",method="Cosine",nn=5))
print(rec)
names(getModel(rec))
getModel(rec)$nn
R<-as.matrix( test[which(!(colnames(test)%in%removeColumns))])
r <- as(R, "realRatingMatrix")
recom.test <- predict(rec, r[1:nrow(r)], type="ratings")
recom.test
predictedValues <- as(recom.test, "matrix")
pred.values.df <- cbind(MAT_NOVA_MATRICULA=test$MAT_NOVA_MATRICULA,as.data.frame(predictedValues))
pred.values.df.melt <- melt(pred.values.df,id.vars = "MAT_NOVA_MATRICULA", variable.name = "NOME_DISCIPLINA") %>%
mutate(MAT_NOVA_MATRICULA = as.character(MAT_NOVA_MATRICULA),
NOME_DISCIPLINA = as.character(NOME_DISCIPLINA))
test.4.periodo <- lab4_part1_data_v2 %>% filter(periodo_relativo == 4)
result.4.periodo <- inner_join(pred.values.df.melt,lab4_part1_data_v2)
View(predictedValues)
View(pred.values.df)
View(pred.values.df.melt)
View(pred.values.df.melt)
result.4.periodo <- inner_join(pred.values.df.melt,lab4_part1_data_v2)
View(result.4.periodo)
RMSE(test, result.4.periodo)
